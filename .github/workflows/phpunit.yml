name: PHPUnit tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: write    # Pro commit coverage badge
      pages: write       # Pro deployment na GitHub Pages
      id-token: write    # Pro GitHub Pages

    services:
      postgres:
        image: library/postgres:17.5-alpine
        env:
          POSTGRES_DB: rest_db_test
          POSTGRES_USER: app
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, xdebug
          coverage: xdebug

      - name: Fix git ownership issue
        run: git config --global --add safe.directory /github/workspace

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-scripts --ignore-platform-req=ext-intl

      - name: Create var directory
        run: mkdir -p var

      - name: Create .env.local
        run: |
          touch .env.local
          echo 'APP_ENV=test' > .env.local

      - name: Run database migrations
        run: |
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Load test fixtures
        run: php bin/console doctrine:fixtures:load --no-interaction --env=test

      - name: Verify test data
        run: |
          echo "Verifying test data..."
          php bin/console dbal:run-sql "SELECT COUNT(*) as user_count FROM appuser" --env=test
          php bin/console dbal:run-sql "SELECT COUNT(*) as article_count FROM article" --env=test

      - name: Run PHPUnit tests
        run: php bin/phpunit --testdox

#name: PHPUnit tests
#
#on:
#  push:
#    branches: [ master, develop ]
#  pull_request:
#    branches: [ master, develop ]
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write    # Pro commit coverage badge
#      pages: write       # Pro deployment na GitHub Pages
#      id-token: write    # Pro GitHub Pages
#
#    services:
#      postgres:
#        image: library/postgres:17.5-alpine
#        env:
#          POSTGRES_DB: rest_db_test
#          POSTGRES_USER: app
#          POSTGRES_PASSWORD: test
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '8.2'
#          tools: composer
#          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, xdebug
#          coverage: xdebug
#
#      - name: Fix git ownership issue
#        run: git config --global --add safe.directory /github/workspace
#
#      - name: Cache Composer packages
#        id: composer-cache
#        uses: actions/cache@v3
#        with:
#          path: vendor
#          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-php-
#
#      - name: Install dependencies
#        run: composer install --prefer-dist --no-progress --no-suggest --no-scripts --ignore-platform-req=ext-intl
#
#      - name: Create var directory
#        run: mkdir -p var
#
#      - name: Create .env.local
#        run: |
#          touch .env.local
#          echo 'APP_ENV=test' > .env.local
#
#      - name: Run database migrations
#        run: |
#          php bin/console doctrine:database:create --env=test
#          php bin/console doctrine:migrations:migrate --no-interaction --env=test
#
#      - name: Run PHPUnit tests with coverage
#        run: php bin/phpunit --coverage-clover clover.xml --coverage-text
#
#      - name: Debug - Check coverage files
#        run: |
#          echo "Checking for coverage files:"
#          ls -la
#          if [ -f clover.xml ]; then
#            echo "clover.xml found, size:"
#            ls -lh clover.xml
#            echo "First few lines:"
#            head -10 clover.xml
#          else
#            echo "clover.xml not found!"
#          fi
#
#      - name: Generate coverage badge
#        if: success() && hashFiles('clover.xml') != ''
#        uses: timkrase/phpunit-coverage-badge@v1.2.1
#        with:
#          coverage_badge_path: output/coverage.svg
#          push_badge: false
#
#      - name: Push badge to image-data branch
#        if: success() && hashFiles('clover.xml') != ''
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          publish_dir: ./output
#          publish_branch: image-data
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          user_name: 'github-actions[bot]'
#          user_email: 'github-actions[bot]@users.noreply.github.com'
#
#      - name: Coverage Check
#        if: success() && hashFiles('clover.xml') != ''
#        run: |
#          if [ -f clover.xml ]; then
#            COVERAGE=$(php -r "
#              \$xml = simplexml_load_file('clover.xml');
#              if (\$xml && \$xml->project && \$xml->project->metrics) {
#                \$metrics = \$xml->project->metrics;
#                \$covered = (float)\$metrics['coveredstatements'];
#                \$total = (float)\$metrics['statements'];
#                \$percentage = \$total > 0 ? round((\$covered / \$total) * 100, 2) : 0;
#                echo \$percentage;
#              } else {
#                echo '0';
#              }
#            ")
#            echo "Coverage: $COVERAGE%"
#            if (( $(echo "$COVERAGE < 15" | bc -l) )); then
#              echo "Coverage $COVERAGE% is below threshold 15%"
#              exit 1
#            else
#              echo "Coverage $COVERAGE% meets threshold"
#            fi
#          fi
